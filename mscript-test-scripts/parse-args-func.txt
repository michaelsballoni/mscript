{
	$ arguments = list("-n", "10")
	$ argument_specs = list(index("flag", "-n", "long-flag", "--number", "description", "A number", "takes", true, "numeric", true))
	$ parsed = parseArgs(arguments, argument_specs)
	> "7a. Should be: " + parsed.string()
}
{
	$ arguments = list("-n", "foo")
	$ argument_specs = list(index("flag", "-n", "long-flag", "--number", "description", "A number", "takes", true, "numeric", true))
	$ parsed = parseArgs(arguments, argument_specs)
	* error("Non-numeric argument should have been caught")
	! err
		> "7b. Error caught"
	}
}

>>

{
	$ arguments = list("-i", "foo", "bar", "--help")
	$ argument_specs = list(index("flag", "-i", "long-flag", "--input", "description", "Input file", "takes", true))
	$ parsed = parseArgs(arguments, argument_specs)
	> "6. Should be: " + parsed.string()
}

>>

{
	$ arguments = list("-i", "foo")
	$ argument_specs = list(index("flag", "-i", "long-flag", "--input", "description", "Input file", "takes", true))
	$ parsed = parseArgs(arguments, argument_specs)
	> "5a. Should be: " + parsed.string()
}
{
	$ arguments = list("-i")
	$ argument_specs = list(index("flag", "-i", "long-flag", "--input", "description", "Input file", "takes", true))
	$ parsed = parseArgs(arguments, argument_specs)
	* error("Missing argument should have been caught")
	! err
		> "5b. Error caught"
	}
}

>>

{
	$ arguments = list("-q")
	$ argument_specs = list(index("flag", "-q", "long-flag", "--quiet", "description", "Suppress program output"))
	$ parsed = parseArgs(arguments, argument_specs)
	> "4a. Should be: " + parsed.string()
}
{
	$ arguments = list("--quiet")
	$ argument_specs = list(index("flag", "-q", "long-flag", "--quiet", "description", "Suppress program output"))
	$ parsed = parseArgs(arguments, argument_specs)
	> "4b. Should be: " + parsed.string()
}

>>

{
	$ arguments = list("-?")
	$ argument_specs = list()
	$ parsed = parseArgs(arguments, argument_specs)
	> "3. Should be: " + parsed.string()
}

>>

{
	$ arguments = list("foo", "bar")
	$ argument_specs = list()
	$ parsed = parseArgs(arguments, argument_specs)
	> "2. Should be: " + parsed.string()
}

>>

{
	$ arguments = list()
	$ argument_specs = list()
	$ parsed = parseArgs(arguments, argument_specs)
	> "1a. Should be: " + parsed.string()
}
{
	$ arguments = list("foo", "bar")
	$ argument_specs = list()
	$ parsed = parseArgs(arguments, argument_specs)
	> "1b. Should be: " + parsed.string()
}

>>

===

7a. Should be: {: [], -n: 10, -?: null}
7b. Error caught

6. Should be: {: [bar], -i: foo, -?: true}

5a. Should be: {: [], -i: foo, -?: null}
5b. Error caught

4a. Should be: {: [], -q: true, -?: null}
4b. Should be: {: [], -q: true, -?: null}

3. Should be: {: [], -?: true}

2. Should be: {: [foo, bar], -?: null}

1a. Should be: {: [], -?: null}
1b. Should be: {: [foo, bar], -?: null}
